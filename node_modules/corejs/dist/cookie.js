/**
 * Module cookie
 * @module cookie
 */
;(function(factory) {
    var registeredInModuleLoader = false;
    if (typeof define === 'function' && define.amd) {
        define(factory);
        registeredInModuleLoader = true;
    }

    if (!registeredInModuleLoader) {
        window.core.cookie = factory();
    }
})(/** @lends module:cookie */function() {
    /**
     * Опции по умолчанию
     * @private
     */
    var _defaults = {
        path: '/',
        secure: false
    };

    /**
     * Максимальная дата истечения срока
     * @private
     */
    var _maxExpireDate = new Date('Fri, 31 Dec 9999 23:59:59 UTC');

    /**
     * Получить cookie
     * @param key ключ
     * @param defaultValue значение по умолчанию
     */
    var get = function(key, defaultValue) {
        defaultValue = (typeof defaultValue !== 'undefined') ? defaultValue : undefined;
        var matches = document.cookie.match(new RegExp(
            "(?:^|; )" + key.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : defaultValue;
    };

    /**
     * Установить cookie
     * @param key ключ
     * @param value значение
     * @param options параметры
     */
    var set = function(key, value, options) {
        options = _getExtendedOptions(options);
        options.expires = _getExpiresDate(value === undefined ? -1 : options.expires);

        document.cookie = _generateCookieString(key, value, options);
    };

    /**
     * Получить параметры установки cookie
     * @param options параметры
     * @private
     */
    var _getExtendedOptions = function(options) {
        return {
            path: options && options.path || _defaults.path,
            domain: options && options.domain || _defaults.domain,
            expires: options && options.expires || _defaults.expires,
            secure: options && options.secure !== undefined ?  options.secure : _defaults.secure
        };
    };

    /**
     * Получить дату истекания срока cookie
     * @param expires дата истекания cookie в числовом или строковом формате
     * @private
     */
    var _getExpiresDate = function(expires) {
        var currentTime;

        if (typeof expires === 'number') {
            currentTime = new Date().getTime();
            expires = expires === Infinity ? _maxExpireDate : new Date(currentTime + expires * 1000);
        } else if (typeof expires === 'string') {
            expires = new Date(expires);
        }

        if (expires && !Validator.isDate(expires)) {
            throw new Error('`expires` parameter can\'t be converted to a valid Date instance');
        }

        return expires;
    };

    /**
     * Сгенерировать строку для записи cookie
     * @param key ключ
     * @param value значение
     * @param options параметры
     * @private
     */
    var _generateCookieString = function (key, value, options) {
        var cookieStr;

        value = encodeURIComponent(value);
        options = options || {};

        cookieStr = key + '=' + value;
        cookieStr += options.path ? ';path=' + options.path : '';
        cookieStr += options.domain ? ';domain=' + options.domain : '';
        cookieStr += options.expires ? ';expires=' + options.expires.toUTCString() : '';
        cookieStr += options.secure ? ';secure' : '';

        return cookieStr;
    };

    /**
     * Удалить cookie
     * @param key ключ
     * @param options параметры
     */
    var remove = function(key, options) {
        set(key, undefined, options);
    };

    return {
        get: get,
        set: set,
        remove: remove
    }
});